name: Build and publish nightly
on:
  push:
    branches:
      - 'master'
jobs:
  linux:
    name: Linux build
    runs-on: ubuntu-latest
    env:
      PREFIX: "/usr"
      GNU_MIRROR: "https://mirror.checkdomain.de/gnu"
      NEWLIB_MIRROR: "https://ftp.gwdg.de/pub/linux/sources.redhat.com"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Dependencies
        run: >
          sudo apt-get install pkg-config gcc g++ flex bison gawk
          gettext bzip2 lzma xz-utils libboost-dev libexpat1-dev
          libgc-dev libgmp-dev zlib1g-dev libipt-dev libmpc-dev
          libmpfr-dev libncurses5-dev libreadline-dev texinfo

      - name: Build
        run: ./.github/scripts/build.sh

  win:
    name: "Windows MSYS2 build"
    runs-on: windows-latest
    env:
      PREFIX: "/ucrt64/local"
      GNU_MIRROR: "https://mirror.checkdomain.de/gnu"
      NEWLIB_MIRROR: "https://ftp.gwdg.de/pub/linux/sources.redhat.com"
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: UCRT64
          update: true
          install:
            git autoconf automake flex bison gawk make patch sed tar texinfo
            mingw-w64-ucrt-x86_64-boost
            mingw-w64-ucrt-x86_64-bzip2
            mingw-w64-ucrt-x86_64-gcc
            mingw-w64-ucrt-x86_64-libtool
            mingw-w64-ucrt-x86_64-pkgconf
            mingw-w64-ucrt-x86_64-readline
            mingw-w64-ucrt-x86_64-xz
            mingw-w64-ucrt-x86_64-expat
            mingw-w64-ucrt-x86_64-gettext
            mingw-w64-ucrt-x86_64-gmp
            mingw-w64-ucrt-x86_64-mpc
            mingw-w64-ucrt-x86_64-mpfr
            mingw-w64-ucrt-x86_64-ncurses
            mingw-w64-ucrt-x86_64-gmp
            mingw-w64-ucrt-x86_64-zlib

      - name: Build
        run: ./.github/scripts/build.sh

  macos:
    name: macOS build
    runs-on: macos-latest
    env:
      PREFIX: "/usr/local/ngdevkit"
      GNU_MIRROR: "https://mirror.checkdomain.de/gnu"
      NEWLIB_MIRROR: "https://ftp.gwdg.de/pub/linux/sources.redhat.com"
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Dependencies
        run: >
          brew install -q autoconf automake bison boost bzip2 coreutils gawk
          libtool make pkg-config readline texinfo expat flex gettext
          gmp gnu-sed libmpc mpfr ncurses xz zlib zstd

      - name: Build
        run: ./.github/scripts/build.sh

  deploy_deb:
    name: "deb: trigger Launchpad rebuild"
    runs-on: ubuntu-latest
    needs: [linux, win, macos]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: "Launchpad: trigger nightly deb rebuild"
        run: .ci/trigger-launchpad-build.sh --slug="~dciabrin/ngdevkit/+git/ngdevkit-toolchain" --name="Travis%20Deploy"
        env:
          LAUNCHPAD_TOKEN: ${{ secrets.LAUNCHPAD_TOKEN }}
          LAUNCHPAD_TOKEN_SECRET: ${{ secrets.LAUNCHPAD_TOKEN_SECRET }}

  deploy_rpm:
    name: "rpm: trigger COPR rebuild"
    needs: [linux, win, macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "COPR: push new nightly revision"
        run:  |
          git config --global user.name 'CI build bot'
          git config --global user.email '<>'
          git config --global url."https://api@github.com/".insteadOf "https://github.com/"
          git clone https://github.com/dciabrin/copr-ngdevkit .ci/copr-ngdevkit
          .ci/copr-ngdevkit/.ci/bump-project-nightly-build.sh ngdevkit-toolchain
          .ci/copr-ngdevkit/.ci/trigger-copr-build.sh --package ngdevkit-toolchain
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          COPR_SECRET: ${{ secrets.COPR_SECRET }}
          LAUNCHPAD_TOKEN: ${{ secrets.LAUNCHPAD_TOKEN }}
          LAUNCHPAD_TOKEN_SECRET: ${{ secrets.LAUNCHPAD_TOKEN_SECRET }}

  deploy_brew:
    name: "brew: trigger bottle rebuild"
    runs-on: ubuntu-latest
    needs: [linux, win, macos]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "Brew: push new nightly revision and bottle"
        run: |
          git config --global user.name 'CI build bot'
          git config --global user.email '<>'
          git config --global url."https://api@github.com/".insteadOf "https://github.com/"
          git clone https://github.com/dciabrin/homebrew-ngdevkit .ci/homebrew-ngdevkit
          .ci/homebrew-ngdevkit/.ci/bump-project-nightly-build.sh --package ngdevkit-toolchain --batch
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  deploy_msys2:
    name: "msys2: trigger package rebuild"
    needs: [linux, win, macos]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: "MSYS2: push new nightly revision and rebuild package repository"
        run: |
          git config --global user.name 'CI build bot'
          git config --global user.email '<>'
          git config --global url."https://api@github.com/".insteadOf "https://github.com/"
          git clone https://github.com/dciabrin/msys2-ngdevkit .ci/msys2-ngdevkit
          .ci/msys2-ngdevkit/.ci/bump-project-nightly-build.sh --package ngdevkit-toolchain --batch
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

  cleanup_tags:
    name: "Cleanup tags and artefacts"
    runs-on: ubuntu-latest
    needs: [deploy_deb, deploy_rpm, deploy_brew, deploy_msys2]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: "Cleanup old nightly tags"
        run: .ci/gc-nightly-tags.sh --user=dciabrin --repo=ngdevkit-toolchain --tag-regex='^refs/tags/nightly-[0-9]*'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
